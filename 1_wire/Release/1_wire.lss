
1_wire.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000612  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000059e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  00800100  00800100  00000612  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000612  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  00000688  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000066f  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005b6  00000000  00000000  00000d17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001a0  00000000  00000000  000012cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  0000146d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 34       	cpi	r26, 0x48	; 72
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 16 01 	call	0x22c	; 0x22c <main>
  88:	0c 94 cd 02 	jmp	0x59a	; 0x59a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <SearchBuses>:
  90:	4f 92       	push	r4
  92:	5f 92       	push	r5
  94:	6f 92       	push	r6
  96:	7f 92       	push	r7
  98:	8f 92       	push	r8
  9a:	9f 92       	push	r9
  9c:	af 92       	push	r10
  9e:	bf 92       	push	r11
  a0:	cf 92       	push	r12
  a2:	df 92       	push	r13
  a4:	ef 92       	push	r14
  a6:	ff 92       	push	r15
  a8:	0f 93       	push	r16
  aa:	1f 93       	push	r17
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	1f 92       	push	r1
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	7c 01       	movw	r14, r24
  b8:	20 e0       	ldi	r18, 0x00	; 0
  ba:	26 17       	cp	r18, r22
  bc:	49 f0       	breq	.+18     	; 0xd0 <SearchBuses+0x40>
  be:	fc 01       	movw	r30, r24
  c0:	11 92       	st	Z+, r1
  c2:	09 96       	adiw	r24, 0x09	; 9
  c4:	11 92       	st	Z+, r1
  c6:	e8 17       	cp	r30, r24
  c8:	f9 07       	cpc	r31, r25
  ca:	e1 f7       	brne	.-8      	; 0xc4 <SearchBuses+0x34>
  cc:	2f 5f       	subi	r18, 0xFF	; 255
  ce:	f5 cf       	rjmp	.-22     	; 0xba <SearchBuses+0x2a>
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	0e 94 7f 02 	call	0x4fe	; 0x4fe <OWI_DetectPresence>
  d6:	78 2e       	mov	r7, r24
  d8:	27 01       	movw	r4, r14
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	48 1a       	sub	r4, r24
  de:	58 0a       	sbc	r5, r24
  e0:	88 e0       	ldi	r24, 0x08	; 8
  e2:	c8 2e       	mov	r12, r24
  e4:	d1 2c       	mov	r13, r1
  e6:	00 e0       	ldi	r16, 0x00	; 0
  e8:	11 e0       	ldi	r17, 0x01	; 1
  ea:	42 01       	movw	r8, r4
  ec:	98 e0       	ldi	r25, 0x08	; 8
  ee:	69 2e       	mov	r6, r25
  f0:	81 2f       	mov	r24, r17
  f2:	87 21       	and	r24, r7
  f4:	49 f1       	breq	.+82     	; 0x148 <SearchBuses+0xb8>
  f6:	f2 01       	movw	r30, r4
  f8:	52 01       	movw	r10, r4
  fa:	60 e0       	ldi	r22, 0x00	; 0
  fc:	d2 01       	movw	r26, r4
  fe:	86 2d       	mov	r24, r6
 100:	01 90       	ld	r0, Z+
 102:	0d 92       	st	X+, r0
 104:	8a 95       	dec	r24
 106:	e1 f7       	brne	.-8      	; 0x100 <SearchBuses+0x70>
 108:	81 2f       	mov	r24, r17
 10a:	69 83       	std	Y+1, r22	; 0x01
 10c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <OWI_DetectPresence>
 110:	41 2f       	mov	r20, r17
 112:	69 81       	ldd	r22, Y+1	; 0x01
 114:	c2 01       	movw	r24, r4
 116:	0e 94 c3 01 	call	0x386	; 0x386 <OWI_SearchRom>
 11a:	68 2f       	mov	r22, r24
 11c:	f7 01       	movw	r30, r14
 11e:	99 e0       	ldi	r25, 0x09	; 9
 120:	09 9f       	mul	r16, r25
 122:	e0 0d       	add	r30, r0
 124:	f1 1d       	adc	r31, r1
 126:	11 24       	eor	r1, r1
 128:	10 83       	st	Z, r17
 12a:	0f 5f       	subi	r16, 0xFF	; 255
 12c:	27 01       	movw	r4, r14
 12e:	89 e0       	ldi	r24, 0x09	; 9
 130:	08 9f       	mul	r16, r24
 132:	40 0c       	add	r4, r0
 134:	51 1c       	adc	r5, r1
 136:	11 24       	eor	r1, r1
 138:	9f ef       	ldi	r25, 0xFF	; 255
 13a:	49 1a       	sub	r4, r25
 13c:	59 0a       	sbc	r5, r25
 13e:	f5 01       	movw	r30, r10
 140:	66 23       	and	r22, r22
 142:	11 f0       	breq	.+4      	; 0x148 <SearchBuses+0xb8>
 144:	52 01       	movw	r10, r4
 146:	da cf       	rjmp	.-76     	; 0xfc <SearchBuses+0x6c>
 148:	11 0f       	add	r17, r17
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	c8 1a       	sub	r12, r24
 14e:	d1 08       	sbc	r13, r1
 150:	79 f6       	brne	.-98     	; 0xf0 <SearchBuses+0x60>
 152:	74 01       	movw	r14, r8
 154:	10 e0       	ldi	r17, 0x00	; 0
 156:	10 17       	cp	r17, r16
 158:	51 f0       	breq	.+20     	; 0x16e <SearchBuses+0xde>
 15a:	c7 01       	movw	r24, r14
 15c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <OWI_CheckRomCRC>
 160:	99 e0       	ldi	r25, 0x09	; 9
 162:	e9 0e       	add	r14, r25
 164:	f1 1c       	adc	r15, r1
 166:	81 11       	cpse	r24, r1
 168:	04 c0       	rjmp	.+8      	; 0x172 <SearchBuses+0xe2>
 16a:	1f 5f       	subi	r17, 0xFF	; 255
 16c:	f4 cf       	rjmp	.-24     	; 0x156 <SearchBuses+0xc6>
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	01 c0       	rjmp	.+2      	; 0x174 <SearchBuses+0xe4>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	0f 90       	pop	r0
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	1f 91       	pop	r17
 17c:	0f 91       	pop	r16
 17e:	ff 90       	pop	r15
 180:	ef 90       	pop	r14
 182:	df 90       	pop	r13
 184:	cf 90       	pop	r12
 186:	bf 90       	pop	r11
 188:	af 90       	pop	r10
 18a:	9f 90       	pop	r9
 18c:	8f 90       	pop	r8
 18e:	7f 90       	pop	r7
 190:	6f 90       	pop	r6
 192:	5f 90       	pop	r5
 194:	4f 90       	pop	r4
 196:	08 95       	ret

00000198 <FindFamily>:
 198:	6f 5f       	subi	r22, 0xFF	; 255
 19a:	7f 4f       	sbci	r23, 0xFF	; 255
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	9b 01       	movw	r18, r22
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	31 09       	sbc	r19, r1
 1a4:	94 17       	cp	r25, r20
 1a6:	49 f0       	breq	.+18     	; 0x1ba <FindFamily+0x22>
 1a8:	67 5f       	subi	r22, 0xF7	; 247
 1aa:	7f 4f       	sbci	r23, 0xFF	; 255
 1ac:	fb 01       	movw	r30, r22
 1ae:	39 97       	sbiw	r30, 0x09	; 9
 1b0:	50 81       	ld	r21, Z
 1b2:	58 17       	cp	r21, r24
 1b4:	21 f0       	breq	.+8      	; 0x1be <FindFamily+0x26>
 1b6:	9f 5f       	subi	r25, 0xFF	; 255
 1b8:	f2 cf       	rjmp	.-28     	; 0x19e <FindFamily+0x6>
 1ba:	20 e0       	ldi	r18, 0x00	; 0
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	c9 01       	movw	r24, r18
 1c0:	08 95       	ret

000001c2 <DS1820_ReadTemperature>:
 1c2:	0f 93       	push	r16
 1c4:	1f 93       	push	r17
 1c6:	cf 93       	push	r28
 1c8:	c8 2f       	mov	r28, r24
 1ca:	8b 01       	movw	r16, r22
 1cc:	0e 94 7f 02 	call	0x4fe	; 0x4fe <OWI_DetectPresence>
 1d0:	81 11       	cpse	r24, r1
 1d2:	03 c0       	rjmp	.+6      	; 0x1da <DS1820_ReadTemperature+0x18>
 1d4:	88 e1       	ldi	r24, 0x18	; 24
 1d6:	9c ef       	ldi	r25, 0xFC	; 252
 1d8:	25 c0       	rjmp	.+74     	; 0x224 <DS1820_ReadTemperature+0x62>
 1da:	6c 2f       	mov	r22, r28
 1dc:	c8 01       	movw	r24, r16
 1de:	0e 94 9a 01 	call	0x334	; 0x334 <OWI_MatchRom>
 1e2:	6c 2f       	mov	r22, r28
 1e4:	84 e4       	ldi	r24, 0x44	; 68
 1e6:	0e 94 72 01 	call	0x2e4	; 0x2e4 <OWI_SendByte>
 1ea:	8c 2f       	mov	r24, r28
 1ec:	0e 94 58 02 	call	0x4b0	; 0x4b0 <OWI_ReadBit>
 1f0:	88 23       	and	r24, r24
 1f2:	d9 f3       	breq	.-10     	; 0x1ea <DS1820_ReadTemperature+0x28>
 1f4:	8c 2f       	mov	r24, r28
 1f6:	0e 94 7f 02 	call	0x4fe	; 0x4fe <OWI_DetectPresence>
 1fa:	88 23       	and	r24, r24
 1fc:	59 f3       	breq	.-42     	; 0x1d4 <DS1820_ReadTemperature+0x12>
 1fe:	6c 2f       	mov	r22, r28
 200:	c8 01       	movw	r24, r16
 202:	0e 94 9a 01 	call	0x334	; 0x334 <OWI_MatchRom>
 206:	6c 2f       	mov	r22, r28
 208:	8e eb       	ldi	r24, 0xBE	; 190
 20a:	0e 94 72 01 	call	0x2e4	; 0x2e4 <OWI_SendByte>
 20e:	8c 2f       	mov	r24, r28
 210:	0e 94 87 01 	call	0x30e	; 0x30e <OWI_ReceiveByte>
 214:	08 2f       	mov	r16, r24
 216:	10 e0       	ldi	r17, 0x00	; 0
 218:	8c 2f       	mov	r24, r28
 21a:	0e 94 87 01 	call	0x30e	; 0x30e <OWI_ReceiveByte>
 21e:	98 01       	movw	r18, r16
 220:	38 2b       	or	r19, r24
 222:	c9 01       	movw	r24, r18
 224:	cf 91       	pop	r28
 226:	1f 91       	pop	r17
 228:	0f 91       	pop	r16
 22a:	08 95       	ret

0000022c <main>:
 22c:	0e 94 a7 02 	call	0x54e	; 0x54e <system_init>
 230:	8d ef       	ldi	r24, 0xFD	; 253
 232:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
 236:	8f ef       	ldi	r24, 0xFF	; 255
 238:	84 b9       	out	0x04, r24	; 4
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 20 02 	call	0x440	; 0x440 <OWI_Init>
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	68 e0       	ldi	r22, 0x08	; 8
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	91 e0       	ldi	r25, 0x01	; 1
 248:	0e 94 48 00 	call	0x90	; 0x90 <SearchBuses>
 24c:	81 11       	cpse	r24, r1
 24e:	f8 cf       	rjmp	.-16     	; 0x240 <main+0x14>
 250:	48 e0       	ldi	r20, 0x08	; 8
 252:	60 e0       	ldi	r22, 0x00	; 0
 254:	71 e0       	ldi	r23, 0x01	; 1
 256:	80 e1       	ldi	r24, 0x10	; 16
 258:	0e 94 cc 00 	call	0x198	; 0x198 <FindFamily>
 25c:	ec 01       	movw	r28, r24
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	8e 01       	movw	r16, r28
 264:	0f 5f       	subi	r16, 0xFF	; 255
 266:	1f 4f       	sbci	r17, 0xFF	; 255
 268:	20 97       	sbiw	r28, 0x00	; 0
 26a:	21 f0       	breq	.+8      	; 0x274 <main+0x48>
 26c:	b8 01       	movw	r22, r16
 26e:	88 81       	ld	r24, Y
 270:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <DS1820_ReadTemperature>
 274:	9c 01       	movw	r18, r24
 276:	35 95       	asr	r19
 278:	27 95       	ror	r18
 27a:	20 95       	com	r18
 27c:	25 b9       	out	0x05, r18	; 5
 27e:	f4 cf       	rjmp	.-24     	; 0x268 <main+0x3c>

00000280 <OWI_ComputeCRC8>:
 280:	98 e0       	ldi	r25, 0x08	; 8
 282:	28 e1       	ldi	r18, 0x18	; 24
 284:	36 2f       	mov	r19, r22
 286:	38 27       	eor	r19, r24
 288:	30 fd       	sbrc	r19, 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <OWI_ComputeCRC8+0x10>
 28c:	66 95       	lsr	r22
 28e:	03 c0       	rjmp	.+6      	; 0x296 <OWI_ComputeCRC8+0x16>
 290:	62 27       	eor	r22, r18
 292:	66 95       	lsr	r22
 294:	60 68       	ori	r22, 0x80	; 128
 296:	86 95       	lsr	r24
 298:	91 50       	subi	r25, 0x01	; 1
 29a:	a1 f7       	brne	.-24     	; 0x284 <OWI_ComputeCRC8+0x4>
 29c:	86 2f       	mov	r24, r22
 29e:	08 95       	ret

000002a0 <OWI_CheckRomCRC>:
 2a0:	ef 92       	push	r14
 2a2:	ff 92       	push	r15
 2a4:	0f 93       	push	r16
 2a6:	1f 93       	push	r17
 2a8:	cf 93       	push	r28
 2aa:	df 93       	push	r29
 2ac:	ec 01       	movw	r28, r24
 2ae:	7c 01       	movw	r14, r24
 2b0:	87 e0       	ldi	r24, 0x07	; 7
 2b2:	e8 0e       	add	r14, r24
 2b4:	f1 1c       	adc	r15, r1
 2b6:	8e 01       	movw	r16, r28
 2b8:	60 e0       	ldi	r22, 0x00	; 0
 2ba:	f8 01       	movw	r30, r16
 2bc:	81 91       	ld	r24, Z+
 2be:	8f 01       	movw	r16, r30
 2c0:	0e 94 40 01 	call	0x280	; 0x280 <OWI_ComputeCRC8>
 2c4:	68 2f       	mov	r22, r24
 2c6:	0e 15       	cp	r16, r14
 2c8:	1f 05       	cpc	r17, r15
 2ca:	b9 f7       	brne	.-18     	; 0x2ba <OWI_CheckRomCRC+0x1a>
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	9f 81       	ldd	r25, Y+7	; 0x07
 2d0:	69 13       	cpse	r22, r25
 2d2:	01 c0       	rjmp	.+2      	; 0x2d6 <OWI_CheckRomCRC+0x36>
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	df 91       	pop	r29
 2d8:	cf 91       	pop	r28
 2da:	1f 91       	pop	r17
 2dc:	0f 91       	pop	r16
 2de:	ff 90       	pop	r15
 2e0:	ef 90       	pop	r14
 2e2:	08 95       	ret

000002e4 <OWI_SendByte>:
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	d8 2f       	mov	r29, r24
 2ec:	16 2f       	mov	r17, r22
 2ee:	c8 e0       	ldi	r28, 0x08	; 8
 2f0:	81 2f       	mov	r24, r17
 2f2:	d0 ff       	sbrs	r29, 0
 2f4:	03 c0       	rjmp	.+6      	; 0x2fc <OWI_SendByte+0x18>
 2f6:	0e 94 2a 02 	call	0x454	; 0x454 <OWI_WriteBit1>
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <OWI_SendByte+0x1c>
 2fc:	0e 94 41 02 	call	0x482	; 0x482 <OWI_WriteBit0>
 300:	d6 95       	lsr	r29
 302:	c1 50       	subi	r28, 0x01	; 1
 304:	a9 f7       	brne	.-22     	; 0x2f0 <OWI_SendByte+0xc>
 306:	df 91       	pop	r29
 308:	cf 91       	pop	r28
 30a:	1f 91       	pop	r17
 30c:	08 95       	ret

0000030e <OWI_ReceiveByte>:
 30e:	1f 93       	push	r17
 310:	cf 93       	push	r28
 312:	df 93       	push	r29
 314:	18 2f       	mov	r17, r24
 316:	d8 e0       	ldi	r29, 0x08	; 8
 318:	c0 e0       	ldi	r28, 0x00	; 0
 31a:	c6 95       	lsr	r28
 31c:	81 2f       	mov	r24, r17
 31e:	0e 94 58 02 	call	0x4b0	; 0x4b0 <OWI_ReadBit>
 322:	81 11       	cpse	r24, r1
 324:	c0 68       	ori	r28, 0x80	; 128
 326:	d1 50       	subi	r29, 0x01	; 1
 328:	c1 f7       	brne	.-16     	; 0x31a <OWI_ReceiveByte+0xc>
 32a:	8c 2f       	mov	r24, r28
 32c:	df 91       	pop	r29
 32e:	cf 91       	pop	r28
 330:	1f 91       	pop	r17
 332:	08 95       	ret

00000334 <OWI_MatchRom>:
 334:	cf 92       	push	r12
 336:	df 92       	push	r13
 338:	ef 92       	push	r14
 33a:	ff 92       	push	r15
 33c:	1f 93       	push	r17
 33e:	cf 93       	push	r28
 340:	df 93       	push	r29
 342:	1f 92       	push	r1
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	f8 2e       	mov	r15, r24
 34a:	16 2f       	mov	r17, r22
 34c:	85 e5       	ldi	r24, 0x55	; 85
 34e:	99 83       	std	Y+1, r25	; 0x01
 350:	0e 94 72 01 	call	0x2e4	; 0x2e4 <OWI_SendByte>
 354:	cf 2c       	mov	r12, r15
 356:	99 81       	ldd	r25, Y+1	; 0x01
 358:	d9 2e       	mov	r13, r25
 35a:	76 01       	movw	r14, r12
 35c:	88 e0       	ldi	r24, 0x08	; 8
 35e:	e8 0e       	add	r14, r24
 360:	f1 1c       	adc	r15, r1
 362:	61 2f       	mov	r22, r17
 364:	f6 01       	movw	r30, r12
 366:	81 91       	ld	r24, Z+
 368:	6f 01       	movw	r12, r30
 36a:	0e 94 72 01 	call	0x2e4	; 0x2e4 <OWI_SendByte>
 36e:	ce 14       	cp	r12, r14
 370:	df 04       	cpc	r13, r15
 372:	b9 f7       	brne	.-18     	; 0x362 <OWI_MatchRom+0x2e>
 374:	0f 90       	pop	r0
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	ff 90       	pop	r15
 37e:	ef 90       	pop	r14
 380:	df 90       	pop	r13
 382:	cf 90       	pop	r12
 384:	08 95       	ret

00000386 <OWI_SearchRom>:
 386:	cf 92       	push	r12
 388:	df 92       	push	r13
 38a:	ef 92       	push	r14
 38c:	ff 92       	push	r15
 38e:	0f 93       	push	r16
 390:	1f 93       	push	r17
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	8c 01       	movw	r16, r24
 398:	d6 2e       	mov	r13, r22
 39a:	e4 2e       	mov	r14, r20
 39c:	64 2f       	mov	r22, r20
 39e:	80 ef       	ldi	r24, 0xF0	; 240
 3a0:	0e 94 72 01 	call	0x2e4	; 0x2e4 <OWI_SendByte>
 3a4:	c1 e0       	ldi	r28, 0x01	; 1
 3a6:	f1 2c       	mov	r15, r1
 3a8:	d1 e0       	ldi	r29, 0x01	; 1
 3aa:	8e 2d       	mov	r24, r14
 3ac:	0e 94 58 02 	call	0x4b0	; 0x4b0 <OWI_ReadBit>
 3b0:	c8 2e       	mov	r12, r24
 3b2:	8e 2d       	mov	r24, r14
 3b4:	0e 94 58 02 	call	0x4b0	; 0x4b0 <OWI_ReadBit>
 3b8:	cc 20       	and	r12, r12
 3ba:	39 f0       	breq	.+14     	; 0x3ca <OWI_SearchRom+0x44>
 3bc:	81 11       	cpse	r24, r1
 3be:	33 c0       	rjmp	.+102    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3c0:	f8 01       	movw	r30, r16
 3c2:	80 81       	ld	r24, Z
 3c4:	8c 2b       	or	r24, r28
 3c6:	80 83       	st	Z, r24
 3c8:	19 c0       	rjmp	.+50     	; 0x3fc <OWI_SearchRom+0x76>
 3ca:	f8 01       	movw	r30, r16
 3cc:	90 81       	ld	r25, Z
 3ce:	88 23       	and	r24, r24
 3d0:	21 f0       	breq	.+8      	; 0x3da <OWI_SearchRom+0x54>
 3d2:	8c 2f       	mov	r24, r28
 3d4:	80 95       	com	r24
 3d6:	98 23       	and	r25, r24
 3d8:	03 c0       	rjmp	.+6      	; 0x3e0 <OWI_SearchRom+0x5a>
 3da:	dd 11       	cpse	r29, r13
 3dc:	04 c0       	rjmp	.+8      	; 0x3e6 <OWI_SearchRom+0x60>
 3de:	9c 2b       	or	r25, r28
 3e0:	f8 01       	movw	r30, r16
 3e2:	90 83       	st	Z, r25
 3e4:	0b c0       	rjmp	.+22     	; 0x3fc <OWI_SearchRom+0x76>
 3e6:	dd 16       	cp	r13, r29
 3e8:	30 f4       	brcc	.+12     	; 0x3f6 <OWI_SearchRom+0x70>
 3ea:	8c 2f       	mov	r24, r28
 3ec:	80 95       	com	r24
 3ee:	98 23       	and	r25, r24
 3f0:	f8 01       	movw	r30, r16
 3f2:	90 83       	st	Z, r25
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <OWI_SearchRom+0x74>
 3f6:	9c 23       	and	r25, r28
 3f8:	09 f4       	brne	.+2      	; 0x3fc <OWI_SearchRom+0x76>
 3fa:	fd 2e       	mov	r15, r29
 3fc:	f8 01       	movw	r30, r16
 3fe:	80 81       	ld	r24, Z
 400:	8c 23       	and	r24, r28
 402:	21 f0       	breq	.+8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 404:	8e 2d       	mov	r24, r14
 406:	0e 94 2a 02 	call	0x454	; 0x454 <OWI_WriteBit1>
 40a:	03 c0       	rjmp	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40c:	8e 2d       	mov	r24, r14
 40e:	0e 94 41 02 	call	0x482	; 0x482 <OWI_WriteBit0>
 412:	df 5f       	subi	r29, 0xFF	; 255
 414:	cc 0f       	add	r28, r28
 416:	19 f4       	brne	.+6      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 418:	0f 5f       	subi	r16, 0xFF	; 255
 41a:	1f 4f       	sbci	r17, 0xFF	; 255
 41c:	c1 e0       	ldi	r28, 0x01	; 1
 41e:	d1 34       	cpi	r29, 0x41	; 65
 420:	21 f6       	brne	.-120    	; 0x3aa <OWI_SearchRom+0x24>
 422:	8f 2d       	mov	r24, r15
 424:	01 c0       	rjmp	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 426:	8f ef       	ldi	r24, 0xFF	; 255
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	ff 90       	pop	r15
 432:	ef 90       	pop	r14
 434:	df 90       	pop	r13
 436:	cf 90       	pop	r12
 438:	08 95       	ret

0000043a <OWI_DS1820_set_pull_mode.constprop.2>:
 43a:	50 98       	cbi	0x0a, 0	; 10
 43c:	58 9a       	sbi	0x0b, 0	; 11
 43e:	08 95       	ret

00000440 <OWI_Init>:
 440:	81 30       	cpi	r24, 0x01	; 1
 442:	19 f4       	brne	.+6      	; 0x44a <OWI_Init+0xa>
 444:	50 98       	cbi	0x0a, 0	; 10
 446:	0e 94 1d 02 	call	0x43a	; 0x43a <OWI_DS1820_set_pull_mode.constprop.2>
 44a:	8c eb       	ldi	r24, 0xBC	; 188
 44c:	93 e0       	ldi	r25, 0x03	; 3
 44e:	01 97       	sbiw	r24, 0x01	; 1
 450:	f1 f7       	brne	.-4      	; 0x44e <OWI_Init+0xe>
 452:	08 95       	ret

00000454 <OWI_WriteBit1>:
 454:	cf 93       	push	r28
 456:	cf b7       	in	r28, 0x3f	; 63
 458:	f8 94       	cli
 45a:	81 30       	cpi	r24, 0x01	; 1
 45c:	11 f4       	brne	.+4      	; 0x462 <OWI_WriteBit1+0xe>
 45e:	50 9a       	sbi	0x0a, 0	; 10
 460:	58 98       	cbi	0x0b, 0	; 11
 462:	e8 e0       	ldi	r30, 0x08	; 8
 464:	f0 e0       	ldi	r31, 0x00	; 0
 466:	31 97       	sbiw	r30, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <OWI_WriteBit1+0x12>
 46a:	81 30       	cpi	r24, 0x01	; 1
 46c:	19 f4       	brne	.+6      	; 0x474 <OWI_WriteBit1+0x20>
 46e:	50 98       	cbi	0x0a, 0	; 10
 470:	0e 94 1d 02 	call	0x43a	; 0x43a <OWI_DS1820_set_pull_mode.constprop.2>
 474:	8c e7       	ldi	r24, 0x7C	; 124
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	01 97       	sbiw	r24, 0x01	; 1
 47a:	f1 f7       	brne	.-4      	; 0x478 <OWI_WriteBit1+0x24>
 47c:	cf bf       	out	0x3f, r28	; 63
 47e:	cf 91       	pop	r28
 480:	08 95       	ret

00000482 <OWI_WriteBit0>:
 482:	cf 93       	push	r28
 484:	cf b7       	in	r28, 0x3f	; 63
 486:	f8 94       	cli
 488:	81 30       	cpi	r24, 0x01	; 1
 48a:	11 f4       	brne	.+4      	; 0x490 <OWI_WriteBit0+0xe>
 48c:	50 9a       	sbi	0x0a, 0	; 10
 48e:	58 98       	cbi	0x0b, 0	; 11
 490:	e4 e7       	ldi	r30, 0x74	; 116
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	31 97       	sbiw	r30, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <OWI_WriteBit0+0x12>
 498:	81 30       	cpi	r24, 0x01	; 1
 49a:	19 f4       	brne	.+6      	; 0x4a2 <OWI_WriteBit0+0x20>
 49c:	50 98       	cbi	0x0a, 0	; 10
 49e:	0e 94 1d 02 	call	0x43a	; 0x43a <OWI_DS1820_set_pull_mode.constprop.2>
 4a2:	80 e1       	ldi	r24, 0x10	; 16
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	01 97       	sbiw	r24, 0x01	; 1
 4a8:	f1 f7       	brne	.-4      	; 0x4a6 <OWI_WriteBit0+0x24>
 4aa:	cf bf       	out	0x3f, r28	; 63
 4ac:	cf 91       	pop	r28
 4ae:	08 95       	ret

000004b0 <OWI_ReadBit>:
 4b0:	1f 93       	push	r17
 4b2:	cf 93       	push	r28
 4b4:	df 93       	push	r29
 4b6:	1f 92       	push	r1
 4b8:	cd b7       	in	r28, 0x3d	; 61
 4ba:	de b7       	in	r29, 0x3e	; 62
 4bc:	1f b7       	in	r17, 0x3f	; 63
 4be:	f8 94       	cli
 4c0:	81 30       	cpi	r24, 0x01	; 1
 4c2:	11 f4       	brne	.+4      	; 0x4c8 <OWI_ReadBit+0x18>
 4c4:	50 9a       	sbi	0x0a, 0	; 10
 4c6:	58 98       	cbi	0x0b, 0	; 11
 4c8:	e8 e0       	ldi	r30, 0x08	; 8
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	31 97       	sbiw	r30, 0x01	; 1
 4ce:	f1 f7       	brne	.-4      	; 0x4cc <OWI_ReadBit+0x1c>
 4d0:	81 30       	cpi	r24, 0x01	; 1
 4d2:	29 f4       	brne	.+10     	; 0x4de <OWI_ReadBit+0x2e>
 4d4:	50 98       	cbi	0x0a, 0	; 10
 4d6:	89 83       	std	Y+1, r24	; 0x01
 4d8:	0e 94 1d 02 	call	0x43a	; 0x43a <OWI_DS1820_set_pull_mode.constprop.2>
 4dc:	89 81       	ldd	r24, Y+1	; 0x01
 4de:	ee e0       	ldi	r30, 0x0E	; 14
 4e0:	f0 e0       	ldi	r31, 0x00	; 0
 4e2:	31 97       	sbiw	r30, 0x01	; 1
 4e4:	f1 f7       	brne	.-4      	; 0x4e2 <OWI_ReadBit+0x32>
 4e6:	99 b1       	in	r25, 0x09	; 9
 4e8:	ea e6       	ldi	r30, 0x6A	; 106
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	31 97       	sbiw	r30, 0x01	; 1
 4ee:	f1 f7       	brne	.-4      	; 0x4ec <OWI_ReadBit+0x3c>
 4f0:	1f bf       	out	0x3f, r17	; 63
 4f2:	89 23       	and	r24, r25
 4f4:	0f 90       	pop	r0
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	1f 91       	pop	r17
 4fc:	08 95       	ret

000004fe <OWI_DetectPresence>:
 4fe:	1f 93       	push	r17
 500:	cf 93       	push	r28
 502:	df 93       	push	r29
 504:	1f 92       	push	r1
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
 50a:	1f b7       	in	r17, 0x3f	; 63
 50c:	f8 94       	cli
 50e:	81 30       	cpi	r24, 0x01	; 1
 510:	11 f4       	brne	.+4      	; 0x516 <OWI_DetectPresence+0x18>
 512:	50 9a       	sbi	0x0a, 0	; 10
 514:	58 98       	cbi	0x0b, 0	; 11
 516:	ec eb       	ldi	r30, 0xBC	; 188
 518:	f3 e0       	ldi	r31, 0x03	; 3
 51a:	31 97       	sbiw	r30, 0x01	; 1
 51c:	f1 f7       	brne	.-4      	; 0x51a <OWI_DetectPresence+0x1c>
 51e:	81 30       	cpi	r24, 0x01	; 1
 520:	29 f4       	brne	.+10     	; 0x52c <OWI_DetectPresence+0x2e>
 522:	50 98       	cbi	0x0a, 0	; 10
 524:	89 83       	std	Y+1, r24	; 0x01
 526:	0e 94 1d 02 	call	0x43a	; 0x43a <OWI_DS1820_set_pull_mode.constprop.2>
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	e8 e8       	ldi	r30, 0x88	; 136
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	31 97       	sbiw	r30, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <OWI_DetectPresence+0x32>
 534:	99 b1       	in	r25, 0x09	; 9
 536:	e0 e3       	ldi	r30, 0x30	; 48
 538:	f3 e0       	ldi	r31, 0x03	; 3
 53a:	31 97       	sbiw	r30, 0x01	; 1
 53c:	f1 f7       	brne	.-4      	; 0x53a <OWI_DetectPresence+0x3c>
 53e:	1f bf       	out	0x3f, r17	; 63
 540:	90 95       	com	r25
 542:	89 23       	and	r24, r25
 544:	0f 90       	pop	r0
 546:	df 91       	pop	r29
 548:	cf 91       	pop	r28
 54a:	1f 91       	pop	r17
 54c:	08 95       	ret

0000054e <system_init>:
 54e:	8f ee       	ldi	r24, 0xEF	; 239
 550:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
 554:	84 b1       	in	r24, 0x04	; 4
 556:	14 b8       	out	0x04, r1	; 4
 558:	85 b1       	in	r24, 0x05	; 5
 55a:	9f ef       	ldi	r25, 0xFF	; 255
 55c:	95 b9       	out	0x05, r25	; 5
 55e:	87 b1       	in	r24, 0x07	; 7
 560:	80 78       	andi	r24, 0x80	; 128
 562:	87 b9       	out	0x07, r24	; 7
 564:	88 b1       	in	r24, 0x08	; 8
 566:	8f 67       	ori	r24, 0x7F	; 127
 568:	88 b9       	out	0x08, r24	; 8
 56a:	8a b1       	in	r24, 0x0a	; 10
 56c:	1a b8       	out	0x0a, r1	; 10
 56e:	8b b1       	in	r24, 0x0b	; 11
 570:	9b b9       	out	0x0b, r25	; 11
 572:	50 98       	cbi	0x0a, 0	; 10
 574:	50 98       	cbi	0x0a, 0	; 10
 576:	58 9a       	sbi	0x0b, 0	; 11
 578:	40 e0       	ldi	r20, 0x00	; 0
 57a:	60 e8       	ldi	r22, 0x80	; 128
 57c:	81 e6       	ldi	r24, 0x61	; 97
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 c5 02 	call	0x58a	; 0x58a <protected_write_io>
 584:	13 be       	out	0x33, r1	; 51
 586:	15 be       	out	0x35, r1	; 53
 588:	08 95       	ret

0000058a <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18, _SFR_IO_ADDR(SREG)
 58a:	2f b7       	in	r18, 0x3f	; 63
	cli
 58c:	f8 94       	cli
	
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1               // Clear bits 23:16 of Z
#endif
	mov    r30, r24                // Load addr into Z
 58e:	e8 2f       	mov	r30, r24
	mov    r31, r25
 590:	f9 2f       	mov	r31, r25
	st      Z, r22                  // Write protection bit to I/O register
 592:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
 594:	40 83       	st	Z, r20

	out     _SFR_IO_ADDR(SREG), r18
 596:	2f bf       	out	0x3f, r18	; 63
	ret                             // Return to caller
 598:	08 95       	ret

0000059a <_exit>:
 59a:	f8 94       	cli

0000059c <__stop_program>:
 59c:	ff cf       	rjmp	.-2      	; 0x59c <__stop_program>
